[{"/Users/ankitapanjwani/Fanshawe/3rd sem/React_Native2/GalacticWheels/src/pages/List.js":"1"},{"size":3837,"mtime":1691877000798,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","suppressedMessages":"6","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},"ek1xzc","/Users/ankitapanjwani/Fanshawe/3rd sem/React_Native2/GalacticWheels/src/pages/List.js",["7","8","9","10"],[],{"ruleId":"11","severity":2,"message":"12","line":10,"column":1,"nodeType":"13","endLine":10,"endColumn":52,"fix":"14"},{"ruleId":"15","severity":2,"message":"16","line":12,"column":7,"nodeType":"17","messageId":"18","endLine":12,"endColumn":10},{"ruleId":"19","severity":2,"message":"20","line":12,"column":7,"nodeType":"17","messageId":"21","endLine":12,"endColumn":10},{"ruleId":"22","severity":2,"message":"23","line":14,"column":14,"nodeType":"24","messageId":"25","endLine":137,"endColumn":2,"fix":"26"},"import/order","`react-native-paper` import should occur before import of `../api/dataContext`","ImportDeclaration",{"range":"27","text":"28"},"camelcase","Identifier 'a_b' is not in camel case.","Identifier","notCamelCase","no-unused-vars","'a_b' is assigned a value but never used.","unusedVar","react/function-component-definition","Function component is not a function declaration","ArrowFunctionExpression","function-declaration",{"range":"29","text":"30"},[105,206],"import { Divider, Card } from \"react-native-paper\";\nimport useDataContext from \"../api/dataContext\";\n",[224,3814],"function List({ navigation }) {\n  const { spaceships } = useDataContext();\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n\n    spaceshipHeading: {\n      marginTop: 80,\n      marginLeft: 20,\n      fontSize: 25,\n      fontWeight: \"bold\",\n    },\n    spaceshipItem: {\n      marginLeft: 15,\n      marginRight: 15,\n      marginTop: 5,\n      marginBottom: 10,\n    },\n    spaceshipItemContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    modelName: {\n      fontWeight: \"bold\",\n      width: 200,\n      fontSize: 16,\n    },\n    modelType: {\n      marginTop: 5,\n      fontSize: 14,\n      width: 200,\n    },\n    availableStatus: {\n      paddingTop: 10,\n      color: \"green\",\n    },\n    unavailable: {\n      paddingTop: 10,\n      color: \"red\",\n    },\n    amount: {\n      paddingTop: 10,\n      fontWeight: \"bold\",\n    },\n  });\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.spaceshipHeading}>My Spaceships</Text>\n      <Divider style={{ marginTop: 30, width: \"100%\", marginBottom: 20 }} />\n      <ScrollView>\n        {spaceships.length > 0 ? (\n          spaceships.map((item) => {\n            return (\n              <TouchableOpacity\n                key={item.id}\n                onPress={() => navigation.navigate(\"SpaceshipDetail\", { item })}\n              >\n                <Card style={styles.spaceshipItem} key={item.id}>\n                  <Card.Content>\n                    <View style={styles.spaceshipItemContainer}>\n                      <View>\n                        <Text variant=\"titleLarge\" style={styles.modelName}>\n                          {item.title}\n                        </Text>\n                        <Text variant=\"bodyMedium\" style={styles.modelType}>\n                          {item.type}\n                        </Text>\n                        <Text style={styles.amount}>${item.price} / day</Text>\n                        <View\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text\n                            style={\n                              item.available\n                                ? styles.availableStatus\n                                : styles.unavailable\n                            }\n                          >\n                            {item.available ? \"Available\" : \"Unavailable\"}\n                          </Text>\n                          <Text\n                            style={{\n                              color: \"grey\",\n                              paddingTop: 10,\n                              paddingLeft: 5,\n                            }}\n                          >\n                            for Renting\n                          </Text>\n                        </View>\n                      </View>\n\n                      <Image\n                        source={{ uri: item.src }}\n                        style={{\n                          width: 70,\n                          height: 70,\n                          borderRadius: 10,\n                        }}\n                      />\n                    </View>\n                  </Card.Content>\n                </Card>\n              </TouchableOpacity>\n            );\n          })\n        ) : (\n          <View>\n            <Text>No Spaceships</Text>\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}"]